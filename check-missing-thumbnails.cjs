const { createClient } = require('@sanity/client');
const client = createClient({
  projectId: 'aoxze287',
  dataset: 'production',
  apiVersion: '2024-01-01',
  useCdn: false,
  token: process.env.SANITY_API_TOKEN
});

async function findMissingThumbnailArticles() {
  try {
    console.log('üîç „Çµ„É†„Éç„Ç§„É´„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑË®ò‰∫ã„ÇíÁâπÂÆö‰∏≠...');
    
    // ÂÖ®Ë®ò‰∫ã„ÅÆ„Çµ„É†„Éç„Ç§„É´Áä∂Ê≥Å„ÇíÁ¢∫Ë™ç
    const articles = await client.fetch(`*[_type == "post"] | order(publishedAt desc) {
      _id,
      title,
      slug,
      youtubeUrl,
      thumbnail,
      "thumbnailExists": defined(thumbnail)
    }`);
    
    console.log('Á∑èË®ò‰∫ãÊï∞:', articles.length);
    
    // „Çµ„É†„Éç„Ç§„É´„Åå„Å™„ÅÑË®ò‰∫ã„ÇíÁâπÂÆö
    const noThumbnailArticles = articles.filter(article => !article.thumbnailExists);
    console.log('„Çµ„É†„Éç„Ç§„É´„Å™„Åó„ÅÆË®ò‰∫ãÊï∞:', noThumbnailArticles.length);
    
    // YouTube URL„Åå„ÅÇ„Çã„ÅÆ„Å´„Çµ„É†„Éç„Ç§„É´„Åå„Å™„ÅÑË®ò‰∫ã
    const youtubeButNoThumbnail = noThumbnailArticles.filter(article => article.youtubeUrl);
    console.log('YouTube URL„ÅÇ„Çä„Çµ„É†„Éç„Ç§„É´„Å™„Åó„ÅÆË®ò‰∫ãÊï∞:', youtubeButNoThumbnail.length);
    
    console.log('\nüìã „Çµ„É†„Éç„Ç§„É´„ÅåÂøÖË¶Å„Å™Ë®ò‰∫ã‰∏ÄË¶ß:');
    youtubeButNoThumbnail.forEach((article, index) => {
      console.log(`${index + 1}. ${article.title}`);
      console.log(`   URL: ${article.youtubeUrl}`);
      console.log(`   Slug: ${article.slug?.current || '„Å™„Åó'}`);
      console.log('');
    });
    
    return youtubeButNoThumbnail;
    
  } catch (error) {
    console.error('„Ç®„É©„Éº:', error);
  }
}

findMissingThumbnailArticles();