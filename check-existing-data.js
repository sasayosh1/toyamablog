import { createClient } from '@sanity/client';

const client = createClient({
  projectId: 'aoxze287',
  dataset: 'production',
  apiVersion: '2024-01-01',
  useCdn: false
});

async function checkExistingData() {
  try {
    console.log('üì° TOYAMA BLOG„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å´Êé•Á∂ö‰∏≠...');
    
    // Êó¢Â≠ò„ÅÆË®ò‰∫ã„ÇíÁ¢∫Ë™ç
    const existingPosts = await client.fetch('*[_type == "blogPost"] | order(pubDate desc)');
    console.log(`‚úÖ Êé•Á∂öÊàêÂäüÔºÅÊó¢Â≠òË®ò‰∫ãÊï∞: ${existingPosts.length}`);
    
    if (existingPosts.length > 0) {
      console.log('\nüìù Êó¢Â≠òË®ò‰∫ã‰∏ÄË¶ß:');
      existingPosts.forEach((post, index) => {
        console.log(`  ${index + 1}. "${post.title}" (${post.slug?.current || 'ÁÑ°È°å'})`);
        console.log(`     ÂÖ¨ÈñãÊó•: ${post.pubDate ? new Date(post.pubDate).toLocaleDateString('ja-JP') : 'Êú™Ë®≠ÂÆö'}`);
      });
    }
    
    // Âà©Áî®ÂèØËÉΩ„Å™„Éâ„Ç≠„É•„É°„É≥„Éà„Çø„Ç§„Éó„ÇíÁ¢∫Ë™ç
    console.log('\nüîç Âà©Áî®ÂèØËÉΩ„Å™„Éâ„Ç≠„É•„É°„É≥„Éà„Çø„Ç§„Éó:');
    const allDocs = await client.fetch('*[defined(_type)] | order(_type) {_type} | group(_type)');
    const docTypes = [...new Set(allDocs.map(doc => doc._type))];
    console.log(docTypes.join(', '));
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
  }
}

checkExistingData();