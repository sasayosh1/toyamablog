const { createClient } = require('@sanity/client');

const client = createClient({
  projectId: 'aoxze287',
  dataset: 'production',
  apiVersion: '2024-01-01',
  useCdn: false,
  token: process.env.SANITY_API_TOKEN
});

async function checkMissingYouTubeVideos() {
  try {
    console.log('üîç YouTubeÂãïÁîª„Å®SanityË®ò‰∫ã„ÅÆÁÖßÂêàÈñãÂßã...');
    
    // „Åô„Åπ„Å¶„ÅÆË®ò‰∫ã„ÇíÂèñÂæó
    const allPosts = await client.fetch(`
      *[_type == "post"] {
        _id,
        title,
        slug,
        youtubeUrl,
        _createdAt
      } | order(_createdAt desc)
    `);
    
    console.log(`üìä Á∑èË®ò‰∫ãÊï∞: ${allPosts.length}Ë®ò‰∫ã`);
    
    // YouTube URL„ÇíÊåÅ„Å§Ë®ò‰∫ã„ÇíÂàÜÊûê
    const youtubeVideos = allPosts.filter(post => post.youtubeUrl);
    const nonYoutubeVideos = allPosts.filter(post => !post.youtubeUrl);
    
    console.log(`üé¨ YouTubeÂãïÁîªË®ò‰∫ã: ${youtubeVideos.length}Ë®ò‰∫ã`);
    console.log(`üìù ÈùûYouTubeË®ò‰∫ã: ${nonYoutubeVideos.length}Ë®ò‰∫ã`);
    
    // YouTubeÂãïÁîªID„ÇíÊäΩÂá∫
    const existingVideoIds = youtubeVideos.map(post => {
      const url = post.youtubeUrl;
      const match = url.match(/(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/shorts\/)([^&\n?#]+)/);
      return {
        id: match ? match[1] : null,
        title: post.title,
        url: url,
        slug: post.slug?.current || 'no-slug',
        created: post._createdAt
      };
    }).filter(video => video.id);
    
    console.log(`üÜî ÊäΩÂá∫„Åï„Çå„ÅüÂãïÁîªIDÊï∞: ${existingVideoIds.length}ÂÄã`);
    
    // ÊúÄÊñ∞„ÅÆÂãïÁîªÊÉÖÂ†±„ÇíË°®Á§∫
    console.log('\nüé• ÊúÄÊñ∞„ÅÆYouTubeÂãïÁîªÔºà‰∏ä‰Ωç10‰ª∂Ôºâ:');
    existingVideoIds.slice(0, 10).forEach((video, index) => {
      const date = new Date(video.created).toLocaleDateString('ja-JP');
      console.log(`${index + 1}. ${video.title}`);
      console.log(`   ID: ${video.id}`);
      console.log(`   ‰ΩúÊàêÊó•: ${date}`);
      console.log('');
    });
    
    // ÊâãÂãï„Åß„ÅÆÊñ∞ÂãïÁîªÁ¢∫Ë™ç„Éó„É≠„É≥„Éó„Éà
    console.log('üì∫ Êñ∞„Åó„ÅÑÂãïÁîª„ÅÆÁ¢∫Ë™çÊñπÊ≥ï:');
    console.log('1. YouTube„ÉÅ„É£„É≥„Éç„É´Ôºà@sasayosh1Ôºâ„ÅßÊúÄÊñ∞ÂãïÁîª„Çí„ÉÅ„Çß„ÉÉ„ÇØ');
    console.log('2. ‰∏äË®ò„É™„Çπ„Éà„Å´„Å™„ÅÑÂãïÁîªID„Åå„ÅÇ„Çå„Å∞Êú™ÁôªÈå≤ÂãïÁîª');
    console.log('3. Êú™ÁôªÈå≤ÂãïÁîª„ÅåË¶ã„Å§„Åã„Å£„ÅüÂ†¥Âêà„ÄÅÂãïÁîªURL„Çí„ÅäÁü•„Çâ„Åõ„Åè„Å†„Åï„ÅÑ');
    
    // ÊúÄËøë„ÅÆÂãïÁîª„Éë„Çø„Éº„É≥„ÇíÂàÜÊûê
    const recentVideos = existingVideoIds.slice(0, 5);
    console.log('\nüìà ÊúÄÊñ∞ÂãïÁîª„ÅÆÂÇæÂêë:');
    recentVideos.forEach(video => {
      const isShorts = video.url.includes('/shorts/');
      const type = isShorts ? 'Shorts' : 'ÈÄöÂ∏∏ÂãïÁîª';
      console.log(`„Éª${type}: ${video.title.substring(0, 50)}...`);
    });
    
    return {
      totalPosts: allPosts.length,
      youtubeVideos: youtubeVideos.length,
      existingVideoIds: existingVideoIds.map(v => v.id)
    };
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
  }
}

checkMissingYouTubeVideos();