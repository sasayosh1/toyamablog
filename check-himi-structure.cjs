const { createClient } = require('@sanity/client');

const client = createClient({
  projectId: 'aoxze287',
  dataset: 'production',
  apiVersion: '2024-01-01',
  useCdn: false,
  token: process.env.SANITY_API_TOKEN
});

async function checkHimiTempleStructure() {
  try {
    console.log('üîç Ê∞∑Ë¶ãÂ∏ÇÂÖâ‰πÖÂØ∫Ë®ò‰∫ã„ÅÆÊßãÈÄ†„ÇíÁ¢∫Ë™ç‰∏≠...');
    
    const article = await client.fetch(`*[_type == "post" && _id == "4zxT7RlbAnSlGPWZgbmUTQ"][0] {
      _id, title, body
    }`);
    
    if (!article) {
      console.log('‚ùå Ë®ò‰∫ã„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      return;
    }
    
    console.log(`üìÑ Ë®ò‰∫ã: ${article.title}`);
    console.log(`üìä Á∑è„Éñ„É≠„ÉÉ„ÇØÊï∞: ${article.body ? article.body.length : 0}`);
    console.log('\nüìã Ë®ò‰∫ãÊßãÈÄ†:');
    
    let summaryBlocks = [];
    let mapBlockIndex = -1;
    
    if (article.body) {
      article.body.forEach((block, index) => {
        if (block._type === 'block' && block.style) {
          console.log(`„Éñ„É≠„ÉÉ„ÇØ ${index + 1}: ${block.style.toUpperCase()}`);
          if (block.children) {
            const text = block.children.map(child => child.text).join('');
            console.log(`   ÂÜÖÂÆπ: ${text.substring(0, 50)}...`);
          }
        } else if (block._type === 'html' && block.html && block.html.includes('maps')) {
          console.log(`„Éñ„É≠„ÉÉ„ÇØ ${index + 1}: HTML (Google„Éû„ÉÉ„Éó)`);
          mapBlockIndex = index;
        } else if (block._type === 'block' && block.children) {
          const text = block.children.map(child => child.text).join('');
          
          // „Åæ„Å®„ÇÅÈñ¢ÈÄ£„Ç≠„Éº„ÉØ„Éº„Éâ„Çí„ÉÅ„Çß„ÉÉ„ÇØ
          if (text.includes('„Åæ„Å®„ÇÅ') || text.includes('Á∑èÊã¨') || text.includes('ÁµêË´ñ') || 
              text.includes('ÊúÄÂæå„Å´') || text.includes('„ÅÑ„Åã„Åå„Åß„Åó„Åü„Åã') ||
              text.includes('„Åú„Å≤‰∏ÄÂ∫¶') || text.includes('Ë®™„Çå„Å¶„Åø„Å¶')) {
            console.log(`‚≠ê „Éñ„É≠„ÉÉ„ÇØ ${index + 1}: „Åæ„Å®„ÇÅÈñ¢ÈÄ£ÈÉ®ÂàÜ`);
            console.log(`   ÂÜÖÂÆπ: ${text.substring(0, 100)}...`);
            summaryBlocks.push({ index, text: text.substring(0, 200) });
          } else {
            console.log(`„Éñ„É≠„ÉÉ„ÇØ ${index + 1}: ÈÄöÂ∏∏„ÉÜ„Ç≠„Çπ„Éà`);
            console.log(`   ÂÜÖÂÆπ: ${text.substring(0, 50)}...`);
          }
        } else {
          console.log(`„Éñ„É≠„ÉÉ„ÇØ ${index + 1}: ${block._type}`);
        }
      });
      
      console.log(`\nüó∫Ô∏è „Éû„ÉÉ„Éó„ÅÆ‰ΩçÁΩÆ: „Éñ„É≠„ÉÉ„ÇØ ${mapBlockIndex + 1}`);
      console.log(`üìù „Åæ„Å®„ÇÅÈÉ®ÂàÜ„ÅÆÊï∞: ${summaryBlocks.length}`);
      
      if (summaryBlocks.length > 0) {
        console.log('\nüìã „Åæ„Å®„ÇÅÈÉ®ÂàÜ„ÅÆË©≥Á¥∞:');
        summaryBlocks.forEach((summary, i) => {
          console.log(`${i + 1}. „Éñ„É≠„ÉÉ„ÇØ ${summary.index + 1}: ${summary.text}...`);
        });
      }
    }
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
  }
}

checkHimiTempleStructure();