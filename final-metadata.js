import { createClient } from '@sanity/client';

const client = createClient({
  projectId: 'aoxze287',
  dataset: 'production',
  apiVersion: '2024-01-01',
  useCdn: false,
  token: process.env.SANITY_API_TOKEN
});

async function finalMetadataCheck() {
  try {
    console.log('üìù ÊúÄÁµÇ„É°„Çø„Éá„Éº„ÇøÁ¢∫Ë™ç');
    console.log('=' * 50);
    
    // ÂÖ®Ë®ò‰∫ã„ÅÆ„É°„Çø„Éá„Éº„ÇøÁä∂Ê≥Å„ÇíÁ¢∫Ë™ç
    const allPosts = await client.fetch(`
      *[_type == "post"] {
        _id,
        title,
        description,
        tags,
        category
      }
    `);
    
    console.log(`üìä Á∑èË®ò‰∫ãÊï∞: ${allPosts.length}`);
    
    // ‰∏çË∂≥„Åó„Å¶„ÅÑ„Çã„É°„Çø„Éá„Éº„Çø„Çí„Ç´„Ç¶„É≥„Éà
    let missingDescription = 0;
    let missingTags = 0;
    let missingCategory = 0;
    
    allPosts.forEach(post => {
      if (!post.description || post.description === '') missingDescription++;
      if (!post.tags || post.tags.length < 3) missingTags++;
      if (!post.category || post.category === '' || post.category === 'Êú™ÂàÜÈ°û') missingCategory++;
    });
    
    console.log('\nüìã „É°„Çø„Éá„Éº„ÇøÂÆå‰∫ÜÁä∂Ê≥Å:');
    console.log(`‚úÖ Ë™¨ÊòéÊñá„ÅÇ„Çä: ${allPosts.length - missingDescription}‰ª∂`);
    console.log(`‚è≥ Ë™¨ÊòéÊñá‰∏çË∂≥: ${missingDescription}‰ª∂`);
    console.log(`‚úÖ „Çø„Ç∞ÂÖÖÂÆü: ${allPosts.length - missingTags}‰ª∂`);
    console.log(`‚è≥ „Çø„Ç∞‰∏çË∂≥: ${missingTags}‰ª∂`);
    console.log(`‚úÖ „Ç´„ÉÜ„Ç¥„É™Ë®≠ÂÆöÊ∏à„Åø: ${allPosts.length - missingCategory}‰ª∂`);
    console.log(`‚è≥ „Ç´„ÉÜ„Ç¥„É™Êú™Ë®≠ÂÆö: ${missingCategory}‰ª∂`);
    
    // ÂÆå‰∫ÜÁéá
    const completionRate = Math.round((allPosts.length - Math.max(missingDescription, missingTags, missingCategory)) / allPosts.length * 100);
    console.log(`\nüìà „É°„Çø„Éá„Éº„ÇøÂÆå‰∫ÜÁéá: ${completionRate}%`);
    
    // „Çµ„É≥„Éó„É´Ë®ò‰∫ã„ÇíË§áÊï∞Ë°®Á§∫
    const samplePosts = await client.fetch(`
      *[_type == "post" && description != null && tags != null && category != null] [0...3] {
        title,
        description,
        tags,
        category
      }
    `);
    
    console.log('\nüìÑ „Çµ„É≥„Éó„É´Ë®ò‰∫ã:');
    samplePosts.forEach((post, index) => {
      console.log(`\n${index + 1}. ${post.title}`);
      console.log(`   Ë™¨Êòé: ${post.description}`);
      console.log(`   „Ç´„ÉÜ„Ç¥„É™: ${post.category}`);
      console.log(`   „Çø„Ç∞: ${post.tags?.join(', ')}`);
    });
    
    return {
      total: allPosts.length,
      missingDescription,
      missingTags,
      missingCategory,
      completionRate
    };
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
  }
}

finalMetadataCheck();